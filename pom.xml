<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>fi.soveltia.arquillian</groupId>
	<artifactId>liferay-arquillian-examples</artifactId>
	<packaging>pom</packaging>
	<version>1.0.0-SNAPSHOT</version>
	<name>Liferay Arquillian Examples</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<sample.liferay.kernel.version>2.6.0</sample.liferay.kernel.version>
		
		<!-- Default browser for Graphene -->

		<browser>phantomjs</browser>

		<!-- Sonar -->
		
		<!-- The destination file for the code coverage report has to be set to 
			the same value in the parent pom and in each module pom. Then JaCoCo will 
			add up information in the same report, so that, it will give the cross-module 
			code coverage. -->
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<sonar.jacoco.itReportPath>${project.basedir}/../target/jacoco-it.exec</sonar.jacoco.itReportPath>
		<sonar.language>java</sonar.language>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.18</version>
				<configuration>
			        <!-- Excludes unit tests when integration tests are run -->
			        <excludes>
			            <exclude>**/unit/**</exclude>
			        </excludes>
			        <includes>
						<include>**/integration/**</include>
			            <include>**/regression/**</include>
			        </includes>
				</configuration>
				<executions>
					<execution>
						<id>integration-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-surefire-plugin</artifactId>
			    <version>2.18</version>
			    <configuration>
			        <!-- Excludes integration & regression tests when unit tests are run -->
			        <excludes>
			            <exclude>**/integration/**</exclude>
			            <exclude>**/regression/**</exclude>
			        </excludes>
			        <includes>
						<include>**/unit/**</include>
			        </includes>
			    </configuration>
			</plugin>
		</plugins>
	</build>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.liferay</groupId>
				<artifactId>com.liferay.osgi.util</artifactId>
				<version>3.0.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.liferay</groupId>
				<artifactId>com.liferay.osgi.service.tracker.collections</artifactId>
				<version>2.0.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.liferay</groupId>
				<artifactId>com.liferay.portal.spring.extender</artifactId>
				<version>2.0.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>biz.aQute.bnd</groupId>
				<artifactId>biz.aQute.bnd.annotation</artifactId>
				<version>3.2.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.compendium</artifactId>
				<version>5.0.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.core</artifactId>
				<version>6.0.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.liferay.portal</groupId>
				<artifactId>com.liferay.portal.test</artifactId>
				<version>2.0.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.liferay.portal</groupId>
				<artifactId>com.liferay.portal.test.integration</artifactId>
				<version>2.0.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.liferay.arquillian</groupId>
				<artifactId>com.liferay.arquillian.arquillian-container-liferay</artifactId>
				<version>1.0.8</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.liferay.arquillian</groupId>
				<artifactId>com.liferay.arquillian.arquillian-liferay-maven-extension</artifactId>
				<version>1.0.3</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>com.liferay.portal</groupId>
			<artifactId>com.liferay.portal.kernel</artifactId>
			<version>${sample.liferay.kernel.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.liferay.portal</groupId>
			<artifactId>com.liferay.util.taglib</artifactId>
			<version>${sample.liferay.kernel.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.portlet</groupId>
			<artifactId>portlet-api</artifactId>
			<version>2.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
			<scope>provided</scope>
		</dependency>

		<!-- Testing dependencies -->

		<!-- Arquillian -->
		
		<dependency>
			<groupId>com.liferay.arquillian</groupId>
			<artifactId>com.liferay.arquillian.arquillian-container-liferay</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
			<version>1.1.13.Final</version>
			<scope>test</scope>
		</dependency>
	
		<!-- Arquillian Graphene -->
		
		<dependency>
			<groupId>org.jboss.arquillian.graphene</groupId>
			<artifactId>graphene-webdriver</artifactId>
			<version>2.2.1</version>
			<type>pom</type>
			<scope>test</scope>
		</dependency>

		<!-- Mock -->

		<dependency>
		    <groupId>org.mockito</groupId>
		    <artifactId>mockito-all</artifactId>
		    <version>1.10.19</version>
		    <scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>org.powermock</groupId>
		    <artifactId>powermock-api-mockito</artifactId>
		    <version>1.6.6</version>
		    <scope>test</scope>
		</dependency>
   		<dependency>
		    <groupId>org.powermock</groupId>
		    <artifactId>powermock-module-junit4</artifactId>
		    <version>1.6.6</version>
		    <scope>test</scope>
		</dependency>
		
		<!-- Hamcrest -->
		
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
			<version>1.3</version>
		    <scope>test</scope>
		</dependency>
	</dependencies>

	<modules>
		<module>sample-mvc-portlet</module>
		<module>sample-servicebuilder</module>
    <module>arquillian-helper</module>
  </modules>

	<!-- Profiles -->

	<profiles>

		<!-- Sonar -->

		<profile>
			<id>sonar-coverage</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.jacoco</groupId>
							<artifactId>jacoco-maven-plugin</artifactId>
							<version>0.7.8</version>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.14.1</version>
						<configuration>
							<reuseForks>true</reuseForks>
							<argLine>${argLine} -Xmx1024m</argLine>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<configuration>
							<append>true</append>
						</configuration>
						<executions>
							<execution>
								<id>agent-for-ut</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>agent-for-it</id>
								<goals>
									<goal>prepare-agent-integration</goal>
								</goals>
							</execution>
							<execution>
								<id>jacoco-site</id>
								<phase>verify</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>